/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as appHomeImport } from './routes/(app)/home'
import { Route as appUserUsernameImport } from './routes/(app)/user/$username'
import { Route as appMessagesLayoutImport } from './routes/(app)/messages/_layout'
import { Route as appAccountsLayoutImport } from './routes/(app)/accounts/_layout'
import { Route as appUserUsernameIndexImport } from './routes/(app)/user/$username.index'
import { Route as appMessagesLayoutIndexImport } from './routes/(app)/messages/_layout.index'
import { Route as appUserUsernameTaggedImport } from './routes/(app)/user/$username.tagged'
import { Route as appUserUsernameSavedImport } from './routes/(app)/user/$username.saved'
import { Route as appUserUsernameReelsImport } from './routes/(app)/user/$username.reels'
import { Route as appMessagesLayoutRoomIdImport } from './routes/(app)/messages/_layout.$roomId'
import { Route as appAccountsLayoutNotificationsImport } from './routes/(app)/accounts/_layout.notifications'
import { Route as appAccountsLayoutEditImport } from './routes/(app)/accounts/_layout.edit'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const appMessagesImport = createFileRoute('/(app)/messages')()
const appAccountsImport = createFileRoute('/(app)/accounts')()
const LayoutServicesLazyImport = createFileRoute('/_layout/services')()
const LayoutProductsLazyImport = createFileRoute('/_layout/products')()
const LayoutDownloadsLazyImport = createFileRoute('/_layout/downloads')()
const appReelsLazyImport = createFileRoute('/(app)/reels')()
const appNotificationsLazyImport = createFileRoute('/(app)/notifications')()
const appExploreLazyImport = createFileRoute('/(app)/explore')()
const appAccountscenterLazyImport = createFileRoute('/(app)/accounts_center')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appMessagesRoute = appMessagesImport.update({
  id: '/(app)/messages',
  path: '/messages',
  getParentRoute: () => rootRoute,
} as any)

const appAccountsRoute = appAccountsImport.update({
  id: '/(app)/accounts',
  path: '/accounts',
  getParentRoute: () => rootRoute,
} as any)

const LayoutServicesLazyRoute = LayoutServicesLazyImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.services.lazy').then((d) => d.Route),
)

const LayoutProductsLazyRoute = LayoutProductsLazyImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.products.lazy').then((d) => d.Route),
)

const LayoutDownloadsLazyRoute = LayoutDownloadsLazyImport.update({
  id: '/downloads',
  path: '/downloads',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.downloads.lazy').then((d) => d.Route),
)

const appReelsLazyRoute = appReelsLazyImport
  .update({
    id: '/(app)/reels',
    path: '/reels',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(app)/reels.lazy').then((d) => d.Route))

const appNotificationsLazyRoute = appNotificationsLazyImport
  .update({
    id: '/(app)/notifications',
    path: '/notifications',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(app)/notifications.lazy').then((d) => d.Route))

const appExploreLazyRoute = appExploreLazyImport
  .update({
    id: '/(app)/explore',
    path: '/explore',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(app)/explore.lazy').then((d) => d.Route))

const appAccountscenterLazyRoute = appAccountscenterLazyImport
  .update({
    id: '/(app)/accounts_center',
    path: '/accounts_center',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(app)/accounts_center.lazy').then((d) => d.Route),
  )

const appHomeRoute = appHomeImport.update({
  id: '/(app)/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const appUserUsernameRoute = appUserUsernameImport.update({
  id: '/(app)/user/$username',
  path: '/user/$username',
  getParentRoute: () => rootRoute,
} as any)

const appMessagesLayoutRoute = appMessagesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => appMessagesRoute,
} as any)

const appAccountsLayoutRoute = appAccountsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => appAccountsRoute,
} as any)

const appUserUsernameIndexRoute = appUserUsernameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appUserUsernameRoute,
} as any)

const appMessagesLayoutIndexRoute = appMessagesLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appMessagesLayoutRoute,
} as any)

const appUserUsernameTaggedRoute = appUserUsernameTaggedImport.update({
  id: '/tagged',
  path: '/tagged',
  getParentRoute: () => appUserUsernameRoute,
} as any)

const appUserUsernameSavedRoute = appUserUsernameSavedImport.update({
  id: '/saved',
  path: '/saved',
  getParentRoute: () => appUserUsernameRoute,
} as any)

const appUserUsernameReelsRoute = appUserUsernameReelsImport.update({
  id: '/reels',
  path: '/reels',
  getParentRoute: () => appUserUsernameRoute,
} as any)

const appMessagesLayoutRoomIdRoute = appMessagesLayoutRoomIdImport.update({
  id: '/$roomId',
  path: '/$roomId',
  getParentRoute: () => appMessagesLayoutRoute,
} as any)

const appAccountsLayoutNotificationsRoute =
  appAccountsLayoutNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => appAccountsLayoutRoute,
  } as any)

const appAccountsLayoutEditRoute = appAccountsLayoutEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => appAccountsLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/home': {
      id: '/(app)/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appHomeImport
      parentRoute: typeof rootRoute
    }
    '/(app)/accounts_center': {
      id: '/(app)/accounts_center'
      path: '/accounts_center'
      fullPath: '/accounts_center'
      preLoaderRoute: typeof appAccountscenterLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/explore': {
      id: '/(app)/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof appExploreLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/notifications': {
      id: '/(app)/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof appNotificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/reels': {
      id: '/(app)/reels'
      path: '/reels'
      fullPath: '/reels'
      preLoaderRoute: typeof appReelsLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/downloads': {
      id: '/_layout/downloads'
      path: '/downloads'
      fullPath: '/downloads'
      preLoaderRoute: typeof LayoutDownloadsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products': {
      id: '/_layout/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof LayoutProductsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/services': {
      id: '/_layout/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutServicesLazyImport
      parentRoute: typeof LayoutImport
    }
    '/(app)/accounts': {
      id: '/(app)/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof appAccountsImport
      parentRoute: typeof rootRoute
    }
    '/(app)/accounts/_layout': {
      id: '/(app)/accounts/_layout'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof appAccountsLayoutImport
      parentRoute: typeof appAccountsRoute
    }
    '/(app)/messages': {
      id: '/(app)/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof appMessagesImport
      parentRoute: typeof rootRoute
    }
    '/(app)/messages/_layout': {
      id: '/(app)/messages/_layout'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof appMessagesLayoutImport
      parentRoute: typeof appMessagesRoute
    }
    '/(app)/user/$username': {
      id: '/(app)/user/$username'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof appUserUsernameImport
      parentRoute: typeof rootRoute
    }
    '/(app)/accounts/_layout/edit': {
      id: '/(app)/accounts/_layout/edit'
      path: '/edit'
      fullPath: '/accounts/edit'
      preLoaderRoute: typeof appAccountsLayoutEditImport
      parentRoute: typeof appAccountsLayoutImport
    }
    '/(app)/accounts/_layout/notifications': {
      id: '/(app)/accounts/_layout/notifications'
      path: '/notifications'
      fullPath: '/accounts/notifications'
      preLoaderRoute: typeof appAccountsLayoutNotificationsImport
      parentRoute: typeof appAccountsLayoutImport
    }
    '/(app)/messages/_layout/$roomId': {
      id: '/(app)/messages/_layout/$roomId'
      path: '/$roomId'
      fullPath: '/messages/$roomId'
      preLoaderRoute: typeof appMessagesLayoutRoomIdImport
      parentRoute: typeof appMessagesLayoutImport
    }
    '/(app)/user/$username/reels': {
      id: '/(app)/user/$username/reels'
      path: '/reels'
      fullPath: '/user/$username/reels'
      preLoaderRoute: typeof appUserUsernameReelsImport
      parentRoute: typeof appUserUsernameImport
    }
    '/(app)/user/$username/saved': {
      id: '/(app)/user/$username/saved'
      path: '/saved'
      fullPath: '/user/$username/saved'
      preLoaderRoute: typeof appUserUsernameSavedImport
      parentRoute: typeof appUserUsernameImport
    }
    '/(app)/user/$username/tagged': {
      id: '/(app)/user/$username/tagged'
      path: '/tagged'
      fullPath: '/user/$username/tagged'
      preLoaderRoute: typeof appUserUsernameTaggedImport
      parentRoute: typeof appUserUsernameImport
    }
    '/(app)/messages/_layout/': {
      id: '/(app)/messages/_layout/'
      path: '/'
      fullPath: '/messages/'
      preLoaderRoute: typeof appMessagesLayoutIndexImport
      parentRoute: typeof appMessagesLayoutImport
    }
    '/(app)/user/$username/': {
      id: '/(app)/user/$username/'
      path: '/'
      fullPath: '/user/$username/'
      preLoaderRoute: typeof appUserUsernameIndexImport
      parentRoute: typeof appUserUsernameImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDownloadsLazyRoute: typeof LayoutDownloadsLazyRoute
  LayoutProductsLazyRoute: typeof LayoutProductsLazyRoute
  LayoutServicesLazyRoute: typeof LayoutServicesLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDownloadsLazyRoute: LayoutDownloadsLazyRoute,
  LayoutProductsLazyRoute: LayoutProductsLazyRoute,
  LayoutServicesLazyRoute: LayoutServicesLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface appAccountsLayoutRouteChildren {
  appAccountsLayoutEditRoute: typeof appAccountsLayoutEditRoute
  appAccountsLayoutNotificationsRoute: typeof appAccountsLayoutNotificationsRoute
}

const appAccountsLayoutRouteChildren: appAccountsLayoutRouteChildren = {
  appAccountsLayoutEditRoute: appAccountsLayoutEditRoute,
  appAccountsLayoutNotificationsRoute: appAccountsLayoutNotificationsRoute,
}

const appAccountsLayoutRouteWithChildren =
  appAccountsLayoutRoute._addFileChildren(appAccountsLayoutRouteChildren)

interface appAccountsRouteChildren {
  appAccountsLayoutRoute: typeof appAccountsLayoutRouteWithChildren
}

const appAccountsRouteChildren: appAccountsRouteChildren = {
  appAccountsLayoutRoute: appAccountsLayoutRouteWithChildren,
}

const appAccountsRouteWithChildren = appAccountsRoute._addFileChildren(
  appAccountsRouteChildren,
)

interface appMessagesLayoutRouteChildren {
  appMessagesLayoutRoomIdRoute: typeof appMessagesLayoutRoomIdRoute
  appMessagesLayoutIndexRoute: typeof appMessagesLayoutIndexRoute
}

const appMessagesLayoutRouteChildren: appMessagesLayoutRouteChildren = {
  appMessagesLayoutRoomIdRoute: appMessagesLayoutRoomIdRoute,
  appMessagesLayoutIndexRoute: appMessagesLayoutIndexRoute,
}

const appMessagesLayoutRouteWithChildren =
  appMessagesLayoutRoute._addFileChildren(appMessagesLayoutRouteChildren)

interface appMessagesRouteChildren {
  appMessagesLayoutRoute: typeof appMessagesLayoutRouteWithChildren
}

const appMessagesRouteChildren: appMessagesRouteChildren = {
  appMessagesLayoutRoute: appMessagesLayoutRouteWithChildren,
}

const appMessagesRouteWithChildren = appMessagesRoute._addFileChildren(
  appMessagesRouteChildren,
)

interface appUserUsernameRouteChildren {
  appUserUsernameReelsRoute: typeof appUserUsernameReelsRoute
  appUserUsernameSavedRoute: typeof appUserUsernameSavedRoute
  appUserUsernameTaggedRoute: typeof appUserUsernameTaggedRoute
  appUserUsernameIndexRoute: typeof appUserUsernameIndexRoute
}

const appUserUsernameRouteChildren: appUserUsernameRouteChildren = {
  appUserUsernameReelsRoute: appUserUsernameReelsRoute,
  appUserUsernameSavedRoute: appUserUsernameSavedRoute,
  appUserUsernameTaggedRoute: appUserUsernameTaggedRoute,
  appUserUsernameIndexRoute: appUserUsernameIndexRoute,
}

const appUserUsernameRouteWithChildren = appUserUsernameRoute._addFileChildren(
  appUserUsernameRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/home': typeof appHomeRoute
  '/accounts_center': typeof appAccountscenterLazyRoute
  '/explore': typeof appExploreLazyRoute
  '/notifications': typeof appNotificationsLazyRoute
  '/reels': typeof appReelsLazyRoute
  '/downloads': typeof LayoutDownloadsLazyRoute
  '/products': typeof LayoutProductsLazyRoute
  '/services': typeof LayoutServicesLazyRoute
  '/accounts': typeof appAccountsLayoutRouteWithChildren
  '/messages': typeof appMessagesLayoutRouteWithChildren
  '/user/$username': typeof appUserUsernameRouteWithChildren
  '/accounts/edit': typeof appAccountsLayoutEditRoute
  '/accounts/notifications': typeof appAccountsLayoutNotificationsRoute
  '/messages/$roomId': typeof appMessagesLayoutRoomIdRoute
  '/user/$username/reels': typeof appUserUsernameReelsRoute
  '/user/$username/saved': typeof appUserUsernameSavedRoute
  '/user/$username/tagged': typeof appUserUsernameTaggedRoute
  '/messages/': typeof appMessagesLayoutIndexRoute
  '/user/$username/': typeof appUserUsernameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/home': typeof appHomeRoute
  '/accounts_center': typeof appAccountscenterLazyRoute
  '/explore': typeof appExploreLazyRoute
  '/notifications': typeof appNotificationsLazyRoute
  '/reels': typeof appReelsLazyRoute
  '/downloads': typeof LayoutDownloadsLazyRoute
  '/products': typeof LayoutProductsLazyRoute
  '/services': typeof LayoutServicesLazyRoute
  '/accounts': typeof appAccountsLayoutRouteWithChildren
  '/messages': typeof appMessagesLayoutIndexRoute
  '/accounts/edit': typeof appAccountsLayoutEditRoute
  '/accounts/notifications': typeof appAccountsLayoutNotificationsRoute
  '/messages/$roomId': typeof appMessagesLayoutRoomIdRoute
  '/user/$username/reels': typeof appUserUsernameReelsRoute
  '/user/$username/saved': typeof appUserUsernameSavedRoute
  '/user/$username/tagged': typeof appUserUsernameTaggedRoute
  '/user/$username': typeof appUserUsernameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/(app)/home': typeof appHomeRoute
  '/(app)/accounts_center': typeof appAccountscenterLazyRoute
  '/(app)/explore': typeof appExploreLazyRoute
  '/(app)/notifications': typeof appNotificationsLazyRoute
  '/(app)/reels': typeof appReelsLazyRoute
  '/_layout/downloads': typeof LayoutDownloadsLazyRoute
  '/_layout/products': typeof LayoutProductsLazyRoute
  '/_layout/services': typeof LayoutServicesLazyRoute
  '/(app)/accounts': typeof appAccountsRouteWithChildren
  '/(app)/accounts/_layout': typeof appAccountsLayoutRouteWithChildren
  '/(app)/messages': typeof appMessagesRouteWithChildren
  '/(app)/messages/_layout': typeof appMessagesLayoutRouteWithChildren
  '/(app)/user/$username': typeof appUserUsernameRouteWithChildren
  '/(app)/accounts/_layout/edit': typeof appAccountsLayoutEditRoute
  '/(app)/accounts/_layout/notifications': typeof appAccountsLayoutNotificationsRoute
  '/(app)/messages/_layout/$roomId': typeof appMessagesLayoutRoomIdRoute
  '/(app)/user/$username/reels': typeof appUserUsernameReelsRoute
  '/(app)/user/$username/saved': typeof appUserUsernameSavedRoute
  '/(app)/user/$username/tagged': typeof appUserUsernameTaggedRoute
  '/(app)/messages/_layout/': typeof appMessagesLayoutIndexRoute
  '/(app)/user/$username/': typeof appUserUsernameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/home'
    | '/accounts_center'
    | '/explore'
    | '/notifications'
    | '/reels'
    | '/downloads'
    | '/products'
    | '/services'
    | '/accounts'
    | '/messages'
    | '/user/$username'
    | '/accounts/edit'
    | '/accounts/notifications'
    | '/messages/$roomId'
    | '/user/$username/reels'
    | '/user/$username/saved'
    | '/user/$username/tagged'
    | '/messages/'
    | '/user/$username/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/home'
    | '/accounts_center'
    | '/explore'
    | '/notifications'
    | '/reels'
    | '/downloads'
    | '/products'
    | '/services'
    | '/accounts'
    | '/messages'
    | '/accounts/edit'
    | '/accounts/notifications'
    | '/messages/$roomId'
    | '/user/$username/reels'
    | '/user/$username/saved'
    | '/user/$username/tagged'
    | '/user/$username'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/login'
    | '/register'
    | '/(app)/home'
    | '/(app)/accounts_center'
    | '/(app)/explore'
    | '/(app)/notifications'
    | '/(app)/reels'
    | '/_layout/downloads'
    | '/_layout/products'
    | '/_layout/services'
    | '/(app)/accounts'
    | '/(app)/accounts/_layout'
    | '/(app)/messages'
    | '/(app)/messages/_layout'
    | '/(app)/user/$username'
    | '/(app)/accounts/_layout/edit'
    | '/(app)/accounts/_layout/notifications'
    | '/(app)/messages/_layout/$roomId'
    | '/(app)/user/$username/reels'
    | '/(app)/user/$username/saved'
    | '/(app)/user/$username/tagged'
    | '/(app)/messages/_layout/'
    | '/(app)/user/$username/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  appHomeRoute: typeof appHomeRoute
  appAccountscenterLazyRoute: typeof appAccountscenterLazyRoute
  appExploreLazyRoute: typeof appExploreLazyRoute
  appNotificationsLazyRoute: typeof appNotificationsLazyRoute
  appReelsLazyRoute: typeof appReelsLazyRoute
  appAccountsRoute: typeof appAccountsRouteWithChildren
  appMessagesRoute: typeof appMessagesRouteWithChildren
  appUserUsernameRoute: typeof appUserUsernameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  appHomeRoute: appHomeRoute,
  appAccountscenterLazyRoute: appAccountscenterLazyRoute,
  appExploreLazyRoute: appExploreLazyRoute,
  appNotificationsLazyRoute: appNotificationsLazyRoute,
  appReelsLazyRoute: appReelsLazyRoute,
  appAccountsRoute: appAccountsRouteWithChildren,
  appMessagesRoute: appMessagesRouteWithChildren,
  appUserUsernameRoute: appUserUsernameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/login",
        "/register",
        "/(app)/home",
        "/(app)/accounts_center",
        "/(app)/explore",
        "/(app)/notifications",
        "/(app)/reels",
        "/(app)/accounts",
        "/(app)/messages",
        "/(app)/user/$username"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/downloads",
        "/_layout/products",
        "/_layout/services"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/(app)/home": {
      "filePath": "(app)/home.tsx"
    },
    "/(app)/accounts_center": {
      "filePath": "(app)/accounts_center.lazy.tsx"
    },
    "/(app)/explore": {
      "filePath": "(app)/explore.lazy.tsx"
    },
    "/(app)/notifications": {
      "filePath": "(app)/notifications.lazy.tsx"
    },
    "/(app)/reels": {
      "filePath": "(app)/reels.lazy.tsx"
    },
    "/_layout/downloads": {
      "filePath": "_layout.downloads.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/products": {
      "filePath": "_layout.products.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/services": {
      "filePath": "_layout.services.lazy.tsx",
      "parent": "/_layout"
    },
    "/(app)/accounts": {
      "filePath": "(app)/accounts",
      "children": [
        "/(app)/accounts/_layout"
      ]
    },
    "/(app)/accounts/_layout": {
      "filePath": "(app)/accounts/_layout.tsx",
      "parent": "/(app)/accounts",
      "children": [
        "/(app)/accounts/_layout/edit",
        "/(app)/accounts/_layout/notifications"
      ]
    },
    "/(app)/messages": {
      "filePath": "(app)/messages",
      "children": [
        "/(app)/messages/_layout"
      ]
    },
    "/(app)/messages/_layout": {
      "filePath": "(app)/messages/_layout.tsx",
      "parent": "/(app)/messages",
      "children": [
        "/(app)/messages/_layout/$roomId",
        "/(app)/messages/_layout/"
      ]
    },
    "/(app)/user/$username": {
      "filePath": "(app)/user/$username.tsx",
      "children": [
        "/(app)/user/$username/reels",
        "/(app)/user/$username/saved",
        "/(app)/user/$username/tagged",
        "/(app)/user/$username/"
      ]
    },
    "/(app)/accounts/_layout/edit": {
      "filePath": "(app)/accounts/_layout.edit.tsx",
      "parent": "/(app)/accounts/_layout"
    },
    "/(app)/accounts/_layout/notifications": {
      "filePath": "(app)/accounts/_layout.notifications.tsx",
      "parent": "/(app)/accounts/_layout"
    },
    "/(app)/messages/_layout/$roomId": {
      "filePath": "(app)/messages/_layout.$roomId.tsx",
      "parent": "/(app)/messages/_layout"
    },
    "/(app)/user/$username/reels": {
      "filePath": "(app)/user/$username.reels.tsx",
      "parent": "/(app)/user/$username"
    },
    "/(app)/user/$username/saved": {
      "filePath": "(app)/user/$username.saved.tsx",
      "parent": "/(app)/user/$username"
    },
    "/(app)/user/$username/tagged": {
      "filePath": "(app)/user/$username.tagged.tsx",
      "parent": "/(app)/user/$username"
    },
    "/(app)/messages/_layout/": {
      "filePath": "(app)/messages/_layout.index.tsx",
      "parent": "/(app)/messages/_layout"
    },
    "/(app)/user/$username/": {
      "filePath": "(app)/user/$username.index.tsx",
      "parent": "/(app)/user/$username"
    }
  }
}
ROUTE_MANIFEST_END */
